@page
@{
    ViewData["Title"] = "Documentation";
}

<h3>SQL Rules</h3>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Firewall</h4></div>
    <div class="panel-body">
        This rule fails if the server has firewall rules to allow
        incoming connections from outside the data center.
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Encrypted</h4></div>
    <div class="panel-body">
        The rule fails if any database on the server is not using transparent
        data encryption. The master database is excluded from this check.
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Auditing</h4></div>
    <div class="panel-body">
        <div>
            This rule fails if auditing is not enabled at the server level. Databases inside the server will inherit the setting.
        </div>
        <div>
            Azure database server auditing helps to maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Threat Detection</h4></div>
    <div class="panel-body">
        This rule fails if the server is not enrolled into Azure's Advanced Threat Detection.
        ATD identifies anomalous database
        activities that indicate unusual and potentially harmful attempts to access or exploit databases.
        This feature is kind of expensive, but we will pay any price for security.
    </div>
</div>

<h3>App Service Rules</h3>
<div class="panel panel-default">
    <div class="panel-heading"><h4>TLS 1.2</h4></div>
    <div class="panel-body">
        Rule fails if the app accepts TLS connections using a protocol version < 1.2.
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>HTTPS Only</h4></div>
    <div class="panel-body">
        <div>Rule fails if the app is not configured with the "HTTPSOnly" flag. </div>
        <div>
            Sure, ASP.NET has HTTPS redirection and HSTS (if you ever upgrade to 2.x), but
            let's not depend on code and framework to enforce HTTPS when this is simple to
            automate.
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>HTTP2</h4></div>
    <div class="panel-body">
        <div>Rule fails if the app is not configured to use HTTP 2.0.</div>
        <div>
            HTTP2 isn't a security feature, really, but it is obviously better than
            HTTP 1.1 because the version number is nearly twice as large. That, and multiplexing!
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Connection Strings</h4></div>
    <div class="panel-body">
        <div>Rule fails if the app has connection strings. </div>
        <div>
            Connection strings should live in a Key Vault. 
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Sensitive Settings</h4></div>
    <div class="panel-body">
        <div>Rule fails if the app has sensitive looking settings.</div>
        <div>
            What is a sensitive setting? Well, the auditing software 
            examines the keys and values of the App Service App Settings 
            using an adaptive machine learning neural net and string matching algorithms.
            If a key or value has words like "secret", chances are the fancy algorithm
            will flag the setting as senstive. 
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Affinity Cookie</h4></div>
    <div class="panel-body">
        <div>Our apps shouldn't use in-memory session state, so we don't 
        need an affinity cookie (also called Application Request Routing in the portal). 
        Not having affinity for a specific server means load balancing and resiliancy improve. 
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading"><h4>FTP/FTPS Access</h4></div>
    <div class="panel-body">
        <div>
            We should be deploying using Azure Pipelines, which doesn't use FTP. There's no
            need to have the setting enabled. 
        </div>
    </div>
</div>

<h3>Redis Rules</h3>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Secure Connection</h4></div>
    <div class="panel-body">
        Rule fails if Redis is configured to accept non-encrypted connections.
    </div>
</div>
